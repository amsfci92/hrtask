@model Sahab.Enterprise.HR.Models.RegisterViewModel

@{
    ViewBag.Title = "Edit User/Employee";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit User/Employee</h2>


@using (Html.BeginForm("Edit", "Account", FormMethod.Post,null))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="row">

        @Html.HiddenFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div> 

    @Html.HiddenFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
    @Html.HiddenFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })

    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.DepartmentId, "DepartmentId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.DropDownList("DepartmentId", Model.Departments, "Choose Manager", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.ManagerId, "ManagerId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">

                    @Html.DropDownList("ManagerId", Model.Employees, "Choose Manager", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.ManagerId, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="col-md-3">
                <div class="input-file input-file-image">
                    <img class="img-upload-preview" width="150" src="@(Model.ImageUrl == null ? "http://placehold.it/150x150":$"/f/pi?url={Model.ImageUrl}")" alt="preview">
                    <input type="file" class="form-control form-control-file" id="uploadImg2" name="uploadImg2" accept="image/*" required="">
                    <label for="uploadImg2" class="  label-input-file btn btn-default btn-round">
                        <span class="btn-label">
                            <i class="fa fa-file-image"></i>
                        </span>
                        Upload a Image
                    </label>
                </div>
            </div>
            @Html.HiddenFor(model => model.ImageUrl, new { htmlAttributes = new { id = "profile-image-url", @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
} 
@section Scripts {
    <script>
        $(document).ready(function () {
            $(document).on('change', '#uploadImg2', function () {
                ajaxManager.uploadImage('/U/S', "#uploadImg2", function (data) {
                    if (data != null) { 
                        $("#ImageUrl").val(data.url);
                    }
                });
            }); 
        });
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
